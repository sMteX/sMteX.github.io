{"version":3,"sources":["Setup.js","ResultTable.js","ResultGraph.js","Result.js","MainPage.js","App.js","index.js"],"names":["Setup","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","browsers","matrix","population","generations","handleMatrixChange","bind","assertThisInitialized","handlePopulationChange","handleGenerationChange","handleComputeClick","row","col","_this2","event","value","Number","target","setState","prevMatrix","objectSpread","index","_this3","prevPopulation","compute","_this4","react_default","a","createElement","scope","map","reactstrap_es","type","min","step","onChange","max","Fragment","showSetup","style","margin-bottom","sm","color","onClick","_this5","i","getRow","rows","React","Component","ResultTable","_this$props","count","responsive","className","toConsumableArray","Array","_","values","browser","name","toFixed","ResultGraph","x","y","simulated","arguments","length","undefined","title","concat","strokeStyle","realData","es","height","yDomain","items","getLegend","orientation","data","mapToXY","Result","options","realBrowsers","chrome","firefox","edge","cropRealBrowsers","entries","reduce","obj","_ref","_ref2","slicedToArray","key","slice","Math","populationCount","populations","byBrowser","groupByBrowser","croppedReal","csv","csvData","margin-top","ResultTable_ResultTable","react_csv","filename","headers","margin-left","size","offset","ResultGraph_ResultGraph","item","flattenPopulations","result","forEach","push","real","MainPage","initialPopulation","showResult","setValuesAndCompute","computePopulations","toggleSetup","reshapedPopulation","newPopulation","oldPopulation","multiplyMatrices","A","B","Error","newMatrix","r","k","text-align","href","padding","Setup_Setup","Result_Result","App","fluid","src_MainPage","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.3e1d94d9.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Row, Col, Table, Input, Button } from 'reactstrap';\r\n\r\nexport default class Setup extends React.Component {\r\n  static propTypes = {\r\n    compute: PropTypes.func.isRequired,\r\n    showSetup: PropTypes.bool.isRequired,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      browsers: ['Chrome', 'Firefox', 'IE/Edge'],\r\n      matrix: [\r\n        [0.95, 0.23, 0.1],\r\n        [0.03, 0.75, 0.3],\r\n        [0.02, 0.02, 0.6],\r\n      ],\r\n      population: [70.6, 21, 8.4],\r\n      generations: 5,\r\n    };\r\n    this.handleMatrixChange = this.handleMatrixChange.bind(this);\r\n    this.handlePopulationChange = this.handlePopulationChange.bind(this);\r\n    this.handleGenerationChange = this.handleGenerationChange.bind(this);\r\n    this.handleComputeClick = this.handleComputeClick.bind(this);\r\n  }\r\n\r\n\r\n  handleMatrixChange(row, col) {\r\n    return (event) => {\r\n      const value = Number(event.target.value);\r\n      this.setState((state) => {\r\n        const prevMatrix = state.matrix;\r\n        prevMatrix[row][col] = value;\r\n        return {\r\n          ...state,\r\n          matrix: prevMatrix,\r\n        };\r\n      });\r\n    };\r\n  }\r\n\r\n  handlePopulationChange(index) {\r\n    return (event) => {\r\n      const value = Number(event.target.value);\r\n      this.setState((state) => {\r\n        const prevPopulation = state.population;\r\n        prevPopulation[index] = value;\r\n        return {\r\n          ...state,\r\n          population: prevPopulation,\r\n        };\r\n      });\r\n    }\r\n  }\r\n\r\n  handleGenerationChange(event) {\r\n    const value = Number(event.target.value);\r\n    this.setState((state) => {\r\n      return {\r\n        ...state,\r\n        generations: value,\r\n      };\r\n    });\r\n  }\r\n\r\n  handleComputeClick() {\r\n    this.props.compute(this.state.matrix, this.state.population, this.state.generations);\r\n  }\r\n\r\n  get rows() {\r\n    return [0, 1, 2].map(i => this.getRow(i));\r\n  }\r\n\r\n  getRow(row) {\r\n    return (\r\n      <tr>\r\n        <th scope=\"row\">{this.state.browsers[row]}</th>\r\n        {[0, 1, 2].map(col => (\r\n          <td>\r\n            <Input\r\n              type=\"number\"\r\n              min=\"0\"\r\n              step=\"0.01\"\r\n              onChange={this.handleMatrixChange(row, col)}\r\n              value={this.state.matrix[row][col]} />\r\n          </td>\r\n        ))}\r\n        <td/>\r\n        <td>\r\n          <Input\r\n            type=\"number\"\r\n            min=\"0\"\r\n            step=\"0.1\"\r\n            max=\"100\"\r\n            onChange={this.handlePopulationChange(row)}\r\n            value={this.state.population[row]} />\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  get matrix() {\r\n    return (\r\n      <>\r\n        <Row>\r\n          <h4>Populační matice (Leslieho)</h4>\r\n        </Row>\r\n        <Row>\r\n          <Table>\r\n            <thead>\r\n            <tr>\r\n              <th>Prohlížeč</th>\r\n              <th>Chrome</th>\r\n              <th>Firefox</th>\r\n              <th>IE/Edge</th>\r\n              <th/>\r\n              <th>Počáteční populace [%]</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.rows}\r\n            </tbody>\r\n          </Table>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.showSetup && this.matrix}\r\n        <Row style={{ 'margin-bottom': 5 }}>\r\n          <h4>Počet generací (měsíců)</h4>\r\n        </Row>\r\n        <Row>\r\n          <Col sm=\"2\">\r\n            <Input\r\n              type=\"number\"\r\n              min=\"1\"\r\n              value={this.state.generations}\r\n              onChange={this.handleGenerationChange} />\r\n          </Col>\r\n            <Col sm=\"4\">\r\n              <Button color=\"primary\" onClick={this.handleComputeClick}>\r\n                Vypočítat\r\n              </Button>\r\n            </Col>\r\n        </Row>\r\n      </>\r\n    )\r\n  }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Table } from 'reactstrap';\r\n\r\nexport default class ResultTable extends React.Component {\r\n  static propTypes = {\r\n    count: PropTypes.number.isRequired,\r\n    browsers: PropTypes.shape({\r\n      name: PropTypes.string,\r\n      population: PropTypes.arrayOf(PropTypes.number),\r\n    }).isRequired,\r\n  };\r\n\r\n  render() {\r\n    const { count, browsers } = this.props;\r\n    return (\r\n      <Table responsive className=\"resultTable\">\r\n        <thead>\r\n        <tr>\r\n          <th>Prohlížeč</th>\r\n          <th>Počáteční populace</th>\r\n          {[...Array(count - 1)].map((_, i) => (\r\n            <th>{i + 1}. měsíc</th>\r\n          ))}\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        {Object.values(browsers).map(browser => (\r\n          <tr>\r\n            <th scope=\"row\">{browser.name}</th>\r\n            {browser.population.map(value => (\r\n              <td>{value.toFixed(2)} %</td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n        </tbody>\r\n      </Table>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { LineSeries, YAxis, HorizontalGridLines, DiscreteColorLegend, FlexibleWidthXYPlot } from 'react-vis';\r\n\r\nexport default class ResultGraph extends React.Component {\r\n  static propTypes = {\r\n    browsers: PropTypes.object.isRequired,\r\n    realData: PropTypes.object.isRequired,\r\n  };\r\n\r\n  mapToXY(population) {\r\n    return population.map((value, i) => ({ x: i, y: value }));\r\n  }\r\n\r\n  getLegend(browsers, simulated = false) {\r\n    return Object.values(browsers).map(browser => ({\r\n      title: `${browser.name}${simulated ? ' - simulovaný' : ' - reálný'}`,\r\n      color: browser.color,\r\n      strokeStyle: simulated ? 'dashed' : null,\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    const { realData, browsers } = this.props;\r\n    return (\r\n      <FlexibleWidthXYPlot\r\n        height={400}\r\n        yDomain={[0, 100]}>\r\n        <DiscreteColorLegend\r\n          items={[\r\n            ...this.getLegend(realData),\r\n            ...this.getLegend(browsers, true)\r\n          ]}\r\n          orientation=\"horizontal\" />\r\n        <YAxis/>\r\n        <HorizontalGridLines />\r\n        {Object.values(realData).map(browser => (\r\n          <LineSeries\r\n            data={this.mapToXY(browser.population)}\r\n            color={browser.color} />\r\n        ))}\r\n        {Object.values(browsers).map(browser => (\r\n          <LineSeries\r\n            data={this.mapToXY(browser.population)}\r\n            color={browser.color}\r\n            strokeStyle=\"dashed\" />\r\n        ))}\r\n      </FlexibleWidthXYPlot>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport {Col, Row} from 'reactstrap'\r\nimport PropTypes from 'prop-types';\r\nimport ResultTable from \"./ResultTable\";\r\nimport ResultGraph from \"./ResultGraph\";\r\nimport {CSVLink} from \"react-csv\";\r\n\r\nexport default class Result extends React.Component {\r\n  static propTypes = {\r\n    // samotny objekt\r\n    populations: PropTypes.arrayOf(\r\n      // jednotliva populace\r\n      PropTypes.arrayOf(\r\n        // je sloupcovy vektor (prvky jsou pole s jednim prvkem)\r\n        PropTypes.arrayOf(\r\n          PropTypes.number\r\n        )\r\n      )\r\n    ).isRequired,\r\n  };\r\n\r\n  constructor(options) {\r\n    super(options);\r\n    this.cropRealBrowsers = this.cropRealBrowsers.bind(this);\r\n  }\r\n\r\n  realBrowsers = {\r\n    chrome: {\r\n      name: 'Chrome',\r\n      population: [70.6, 71, 71.9, 72.5, 73.4, 73.6, 73.8, 74.2, 74.5, 75, 75.8, 75.7, 75.7, 76.1, 77.1, 77.7, 77.8, 78.3, 78.7, 78.9, 78.6, 78.6, 78.9, 79.2, 79.3, 79.9, 80.2, 80.7, 81, 81.3, 81.9, 81.8, 81.6, 81.6],\r\n      color: '#66a3ff'\r\n    },\r\n    firefox: {\r\n      name: 'Firefox',\r\n      population: [21, 20.8, 20, 19.6, 18.9, 18.9, 19.1, 18.8, 18.3, 17.8, 17.3, 17.5, 17.4, 17, 16.1, 15.6, 15.6, 15.3, 15.3, 15.1, 15, 14.6, 14.6, 14.6, 14.5, 13.8, 13.8, 13.3, 13.2, 13, 12.8, 12.6, 12.5, 12.3],\r\n      color: '#ffa366'\r\n    },\r\n    edge: {\r\n      name: 'IE/Edge',\r\n      population: [8.4, 8.2, 8.1, 7.9, 7.7, 7.5, 7.1, 7, 7.2, 7.2, 6.9, 6.8, 6.9, 6.9, 6.8, 6.7, 6.6, 6.4, 6, 6, 6.4, 6.8, 6.5, 6.2, 6.2, 6.3, 6, 6, 5.8, 5.7, 5.3, 5.6, 5.9, 6.1],\r\n      color: '#66ff66',\r\n    },\r\n  };\r\n\r\n  get flattenPopulations() {\r\n    const { populations } = this.props;\r\n    // [[[0][1][2]], [[3][4][5]]] => [[0, 1, 2], [3, 4, 5]]\r\n    return populations.map(population => population.map(item => item[0]));\r\n  }\r\n\r\n  get groupByBrowser() {\r\n    const populations = this.flattenPopulations; // jsou groupnute podle poctu populaci (a kazda populace ma 3 prvky)\r\n    const result = {\r\n      chrome: {\r\n        name: 'Chrome',\r\n        population: [],\r\n        color: '#0066ff'\r\n      },\r\n      firefox: {\r\n        name: 'Firefox',\r\n        population: [],\r\n        color: '#ff6600',\r\n      },\r\n      edge: {\r\n        name: 'IE/Edge',\r\n        population: [],\r\n        color: '#00cc00',\r\n      },\r\n    };\r\n    populations.forEach(population => {\r\n      result.chrome.population.push(population[0]);\r\n      result.firefox.population.push(population[1]);\r\n      result.edge.population.push(population[2]);\r\n    });\r\n    return result;\r\n  }\r\n\r\n  cropRealBrowsers(count) {\r\n    return Object.entries(this.realBrowsers).reduce((obj, [key, browser]) => {\r\n      obj[key] = {\r\n        name: browser.name,\r\n        color: browser.color,\r\n        population: browser.population.slice(0, Math.min(count, browser.population.length)),\r\n      };\r\n      return obj;\r\n    }, {});\r\n  }\r\n\r\n  get csvData() {\r\n    const count = this.props.populations.length;\r\n    const real = this.cropRealBrowsers(count);\r\n    const simulated = this.groupByBrowser;\r\n    const ret = {\r\n      headers: ['Prohlížeč', ...[...Array(count)].map((_, i) => `${i + 1}. měsíc`)],\r\n      data: [\r\n        ...Object.values(real).map(browser => [`${browser.name} - skutečný`, ...browser.population]),\r\n        ...Object.values(simulated).map(browser => [`${browser.name} - simulovaný`, ...browser.population]),\r\n      ]\r\n    };\r\n    return ret;\r\n  }\r\n\r\n  render() {\r\n    const populationCount = this.props.populations.length;\r\n    const byBrowser = this.groupByBrowser;\r\n    const croppedReal = this.cropRealBrowsers(populationCount);\r\n    const csv = this.csvData;\r\n    return (\r\n      <>\r\n        <Row style={{ 'margin-top': 20 }}>\r\n          <h4>Výsledek - simulované využití prohlížečů</h4>\r\n          <ResultTable\r\n            count={populationCount}\r\n            browsers={byBrowser} />\r\n          <CSVLink\r\n            filename=\"data.csv\"\r\n            headers={csv.headers}\r\n            data={csv.data}\r\n            className=\"btn csvLink\"\r\n            style={{\r\n              'margin-left': 10,\r\n              'margin-bottom': 20\r\n            }}>\r\n            Export do CSV\r\n          </CSVLink>\r\n        </Row>\r\n        <Row>\r\n          <h4>Graf - reálná data vs simulovaná</h4>\r\n          <Col sm={{ size: 8, offset: 2 }}>\r\n            <ResultGraph\r\n              realData={croppedReal}\r\n              browsers={byBrowser} />\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport {Button, Col} from 'reactstrap';\r\nimport Setup from './Setup';\r\nimport Result from \"./Result\";\r\n\r\nclass MainPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      matrix: [],\r\n      initialPopulation: [],\r\n      generations: 0,\r\n      showResult: false,\r\n      showSetup: false,\r\n    };\r\n    this.setValuesAndCompute = this.setValuesAndCompute.bind(this);\r\n    this.computePopulations = this.computePopulations.bind(this);\r\n    this.toggleSetup = this.toggleSetup.bind(this);\r\n  }\r\n\r\n  setValuesAndCompute(matrix, initialPopulation, generations) {\r\n    this.setState(() => ({\r\n      matrix,\r\n      generations,\r\n      initialPopulation,\r\n    }), () => this.computePopulations());\r\n  }\r\n\r\n  computePopulations() {\r\n    const reshapedPopulation = [];\r\n    this.state.initialPopulation.forEach(value => reshapedPopulation.push([value])); // 3, 1\r\n    const result = [];\r\n    let oldPopulation = reshapedPopulation;\r\n    result.push(oldPopulation);\r\n    let newPopulation;\r\n    for (let i = 0; i < this.state.generations; i++) {\r\n      newPopulation = this.multiplyMatrices(this.state.matrix, oldPopulation);\r\n      result.push(newPopulation);\r\n      oldPopulation = newPopulation;\r\n    }\r\n    this.setState((state) => ({\r\n      ...state,\r\n      browsers: result,\r\n      showResult: true,\r\n    }));\r\n  }\r\n\r\n  multiplyMatrices(A, B) {\r\n    if (A.length === 0 || B.length === 0) {\r\n      throw new Error('Matrices cannot be empty');\r\n    }\r\n    if (A[0].length !== B.length) {\r\n      throw new Error('Matrices must have the same size');\r\n    }\r\n    const newMatrix = [];\r\n    for (let row = 0; row < A.length; row++) {\r\n      const r = [];\r\n      for (let col = 0; col < B[0].length; col++) {\r\n        let value = 0;\r\n        for (let k = 0; k < B.length; k++) {\r\n          value += A[row][k] * B[k][col];\r\n        }\r\n        r.push(value);\r\n      }\r\n      newMatrix.push(r);\r\n    }\r\n    return newMatrix;\r\n  }\r\n\r\n  toggleSetup() {\r\n    this.setState((state) => ({\r\n      ...state,\r\n      showSetup: !state.showSetup,\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Col\r\n          sm={{ size: 6, offset: 3 }}\r\n          style={{ 'text-align': 'center', 'margin-top': 10 }}>\r\n          <h1>MOSIM projekt</h1>\r\n        </Col>\r\n        <p>\r\n          <strong>Téma:</strong> Průběh využití prohlížečů v čase<br />\r\n          <strong>Autoři:</strong> Pavla Grossmannová, Lukáš Stuchlík<br />\r\n          <br />\r\n          <ul>\r\n            <li>Tento projekt se snaží modelovat vývoj procentuálního využití 3 hlavních prohlížečů v čase, přičemž vycházíme z <a href=\"https://www.w3schools.com/browsers/default.asp\">následujících dat</a> (leden 2016 - říjen 2018).</li>\r\n            <li>Nesrovnalosti s reálnými daty lze vysvětlit podle nás tím, že mohou se vyskytnout náhlé události, které ovlivní rozložení uživatelů, např. ve Firefoxu se vyskytne chyba v zabezpečení, uniknou uživatelská data, tak část lidí hromadně migruje k Chromu, tyto události nelze s tímto modelem zachytit a modelovat. </li>\r\n            <li>Simulace by mohla být o něco přesnější, kdyby se populační matice mohla měnit v čase, což stejně ovšem neřeší odhady dat do budoucna.</li>\r\n            <li>K simulaci využíváme Leslieho populační matici. Tato matice má předem vyplněné hodnoty, které jsme experimentálně zjistili. Pro zobrazení nebo změnu hodnot matice nebo počáteční populace klikněte zde: <Button color=\"link\" onClick={this.toggleSetup} style={{ padding: 0 }}>{this.state.showSetup ? 'Skrýt nastavení' : 'Zobrazit nastavení'}</Button></li>\r\n          </ul>\r\n        </p>\r\n        <Setup\r\n          showSetup={this.state.showSetup}\r\n          compute={this.setValuesAndCompute} />\r\n        {this.state.showResult && <Result populations={this.state.browsers} />}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainPage;","import React, { Component } from 'react';\nimport MainPage from './MainPage';\nimport { Col, Container } from 'reactstrap';\n\nclass App extends Component {\n  render() {\n    return (\n      <Container fluid>\n        <Col sm={{ size: 8, offset: 2 }}>\n          <MainPage />\n        </Col>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-vis/dist/style.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}